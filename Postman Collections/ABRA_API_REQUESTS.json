{
	"info": {
		"_postman_id": "5b8d4a4a-c3a4-4967-b556-59c566239816",
		"name": "ABRA API REQUESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Basic Queries",
			"item": [
				{
					"name": "select",
					"item": [
						{
							"name": "invoices with chosen fields and with renaming",
							"id": "66c2befe-051d-4e1f-b4ab-aa3209a22dc9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=ID,DisplayName+as+DocNumber",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "ID,DisplayName+as+DocNumber"
										}
									]
								},
								"description": "<h2>Selection example #1</h2><p>Selection of invoices collection where every invoice object is going to have <b>ID</b> and <b>DisplayName. DisplayName</b> will be renamed as <b>DocNumber</b>.</p>\n\nIn this way, it is possible to include user or non-persistent fields of the Business object in the result. However, we recommend using non-persistent BO fields only in extreme cases, their selection degrades performance."
							},
							"response": []
						},
						{
							"name": "Invoices with all persistent and user items",
							"id": "89b0f944-a3cd-4080-b95d-e98c60cca9e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=*",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "*"
										}
									]
								},
								"description": "<h2>Selection example #2</h2><p>Selection of invoices collection which will contain all persistant fields and user items of business object.</p>"
							},
							"response": []
						},
						{
							"name": "Invoices with chosen fields",
							"id": "f4361cb7-365a-41a3-a859-593182baa04b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount,Firm_ID.Name",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount,Firm_ID.Name"
										}
									]
								},
								"description": "<h2>Selection example #3</h2><p>Selection of invoices collection, where every object is going to contain <b>Amount</b> and firm name to which is invoice issued <b>Firm_ID.Name.</b></p>"
							},
							"response": []
						},
						{
							"name": "Invoices with chosen fields and renaming",
							"id": "2a7ed3b8-ef88-470e-b895-d3c40479bfc4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount,Firm_ID.Name+as+FirmName",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount,Firm_ID.Name+as+FirmName"
										}
									]
								},
								"description": "## Selection example #4\n\nThis is copy of ***example #3*** except the **Firm_ID.Name** is renamed using '*as'* in returned json."
							},
							"response": []
						},
						{
							"name": "DocNumber created from multiple rows",
							"id": "16c15d49-2693-4ea2-8ae2-0ca9a47aa42e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=ID,DocQueue_ID.Code||'-'||OrdNumber||'/'||Period_ID.Code+as+DocNumber",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "ID,DocQueue_ID.Code||'-'||OrdNumber||'/'||Period_ID.Code+as+DocNumber"
										}
									]
								},
								"description": "<h2>Selection example #5</h2><p>Selection of invoices collection, where each invoice object will contain the <b>ID </b>and <b>DisplayName </b>fields, which this time is composed using fields retrieved from linked objects.</p><p>This is a faster variant than shown in the <i><b>example #1</b></i>, in which a non-persistent item <b>DisplayName</b> is used.</p>\n\n*   || - is used to connect strings of text together."
							},
							"response": []
						}
					],
					"id": "7aaec45a-49a6-4687-a352-70908611c2ff",
					"description": "<p>The select clause is used to select the <b>BO</b> fields that will be returned in the query result.</p>\n\n*   **BO** - business object"
				},
				{
					"name": "where",
					"item": [
						{
							"name": "Selection of fields with condition",
							"id": "1f9246fd-71a8-4a85-a23e-fe8d91e1a5e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount,Firm_ID.Name+as+FirmName&where=Amount+gt+10000",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount,Firm_ID.Name+as+FirmName"
										},
										{
											"key": "where",
											"value": "Amount+gt+10000"
										}
									]
								},
								"description": "<h2>Where example #1</h2><p>Selection of issued invoices with <b>amount</b> greater than 10000.</p>"
							},
							"response": []
						},
						{
							"name": "Selection of fields with multiple conditions",
							"id": "ba2c47d4-a78c-4ce9-8354-b9a38f04e8ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount,Firm_ID.Name+as+FirmName&where=Amount+gt+10000+and+Firm_ID+ne+'1100000101'",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount,Firm_ID.Name+as+FirmName"
										},
										{
											"key": "where",
											"value": "Amount+gt+10000+and+Firm_ID+ne+'1100000101'"
										}
									]
								},
								"description": "<h2>Where example #2</h2><p>Selection of issued invoices with <b>amount </b>greater than 10000 and at the same time <b>Firm_ID</b> is not equal to '1100000101'.</p>"
							},
							"response": []
						},
						{
							"name": "Selection of fields with date condition",
							"id": "13d68d92-d760-43a2-ac94-2a34ce4b8011",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/receiptcards?select=DisplayName&where=CreatedAt$DATE+ge+timestamp'2018-08-02T06:00:00'",
									"host": [
										"{{url}}"
									],
									"path": [
										"receiptcards"
									],
									"query": [
										{
											"key": "select",
											"value": "DisplayName"
										},
										{
											"key": "where",
											"value": "CreatedAt$DATE+ge+timestamp'2018-08-02T06:00:00'"
										}
									]
								},
								"description": "<h2>Where example #3</h2><p>Selection of receipt cards with issue date 2.8.2018 at 6:00 or later.</p>\n\n*   <p>We can alternatively use notation in the ISO 8601 format to express date and time (2020-07-10 15:00:00)</p>"
							},
							"response": []
						}
					],
					"id": "83fbb427-9e15-478b-af02-ca57b5048968",
					"description": "The where clause is used to narrow the selection of data. Its value is an expression that returns a Boolean value. The following comparison operators can be used in expressions:\n\n<table><tbody><tr><th><b>operator</b></th><th><b>name</b></th><th><b>meaning</b></th><th><b>example</b></th><th><b>description</b></th></tr><tr><td>eq, =</td><td>equal</td><td>Value comparison. The result is positive if the two values are the same. It can be used to compare against null.</td><td>Code eq '1100000101'</td><td>If the code equals the value of '1100000101' the condition is valid.</td></tr><tr><td>ne, &lt;&gt;</td><td>not equal</td><td>Comparison of nonequivalent values. The result is positive if the two values do not match. It can be used to compare against null.</td><td>Code ne null</td><td>If the code isn't null the condition is valid.</td></tr><tr><td>gt, &gt;</td><td>greater than</td><td>Comparison of value. If one value is bigger than other one the result is positive.</td><td>Code gt 1000</td><td>If the code is bigger than 1000 the condition is valid.</td></tr><tr><td>ge, &gt;=</td><td>equals or greater than</td><td>Comparison of value. If one value is bigger than other one or the value is equal to another value the result is positive.</td><td>Code ge 1000</td><td>If the code is equal to 1000 or bigger than 1000 the condition is valid.</td></tr><tr><td>lt, &lt;</td><td>lower than</td><td>Comparison of value. If one value is lower than other one the result is positive.</td><td>Code lt 1000</td><td>If the code is less than 1000 the condition is valid.</td></tr><tr><td>le, &lt;</td><td>less than or greater than</td><td>Comparison of value. If one value is lower than other one or the value is equal to another value the result is positive.</td><td>Code le 1000</td><td>If the code is equal to 1000 or less than 1000 the condition is valid.</td></tr><tr><td>like</td><td>comparsion</td><td>Comparison of two strings. If the value equals the result is positive. \"*\" - is used as any string.</td><td>Code like '007420'</td><td>If the code is equal to '007420' the condition is valid.</td></tr><tr><td>in</td><td>contains</td><td>Compares the value with multiple values. If value on both sides equals the result is positive.</td><td>Code in ('111', '222', '345')</td><td>If the code is equal to '111' or '222' or '345' the condition is valid.</td></tr><tr><td>between</td><td>is in between;</td><td>Compares if the value is part of interval.</td><td>Code between 100 and 10000</td><td>If the code is equal or greater than 100 and at the same time is equal or lower than 10000 the condition is valid.</td></tr></tbody></table>\n\nExpressions can be combined using logical operators (see the table below for logical operators). The order in which operations are performed can be specified using parentheses.\n\n| **Operator** | **Name** | **Meaning** | **example** | **description** |\n| --- | --- | --- | --- | --- |\n| not | negation | Negates the expression that follows the operator | not (Firm_ID eq '1100000101') | Valid if Firm_ID is not equal to the string '1100000101' |\n| and | and | Valid if both operands are valid (positive). | (Firm_ID eq '1100000101') and (Amount ge 1000) | Valid if Firm_ID is equal to the string '1100000101' and Amount is greater than 1000 |\n| or | or | Valid if at least one of the operands is valid (is positive). | (Firm_ID eq '1100000101') or (Amount ge 1000) | Valid if Firm_ID is equal to the string '1100000101' or Amount is greater than 1000 |"
				},
				{
					"name": "expand",
					"item": [
						{
							"name": "selection of invoices with the entire object of the company",
							"id": "cb6f4b3d-44a7-4c50-a196-efdc582380ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount&expand=Firm_ID",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount"
										},
										{
											"key": "expand",
											"value": "Firm_ID"
										}
									]
								},
								"description": "## Expand example #1\n\nSelection of a collection of invoices issued, each invoice contains the **Amount** and the entire object of the firm (**Firm_ID**) to which it was issued."
							},
							"response": []
						},
						{
							"name": "selection of invoices with selected fields of the company object",
							"id": "ad6d4ab0-f9eb-4ed0-b5df-18580483fce5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount&expand=Firm_ID(ID, Code, Name)",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount"
										},
										{
											"key": "expand",
											"value": "Firm_ID(ID, Code, Name)"
										}
									]
								},
								"description": "## Expand example #2\n\nSelection of a collection of invoices issued, each invoice contains the **Amount** and the object of the company (**Firm_ID**) to which it was issued - the object of the company contains only the files specified in parentheses after the field name in the expand clause. Selected fields can be renamed using the as operator, just like in the select clause."
							},
							"response": []
						},
						{
							"name": "selection of invoices with company objects and a full line collection",
							"id": "0e9eedae-1e42-4240-b7bf-9f094617a52c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount&expand=Firm_ID, Rows",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount"
										},
										{
											"key": "expand",
											"value": "Firm_ID, Rows"
										}
									]
								},
								"description": "## Expand example #3\n\nSelection of the collection of invoices issued, each invoice contains the **Amount**, the entire object of the firm (**Firm_ID**) to which it was issued, and the collection of **Rows** of the invoice."
							},
							"response": []
						},
						{
							"name": "invoice selection with company objects and a limited collection of lines",
							"id": "75c866d7-76d3-48d6-ba75-cd1e9f9f0144",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=id&expand=Rows(select ID, RowType, TotalPrice where RowType eq 3)",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "id"
										},
										{
											"key": "expand",
											"value": "Rows(select ID, RowType, TotalPrice where RowType eq 3)"
										}
									]
								},
								"description": "## Expand example #4\n\nA selection of a collection of invoices issued, where each invoice contains an **ID** and a subset of the collection of invoice rows (**Rows**) limited to rows of type 3 (stock). In addition, only the specified fields - ID, line type and amount - are returned."
							},
							"response": []
						},
						{
							"name": "invoice selection with company objects and limited row collection and sorting",
							"id": "3409e384-4558-4358-b5fa-838b55bcf1fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=id&expand=Rows(select ID, RowType, TotalPrice where RowType eq 3 orderby PosIndex)",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "id"
										},
										{
											"key": "expand",
											"value": "Rows(select ID, RowType, TotalPrice where RowType eq 3 orderby PosIndex)"
										}
									]
								},
								"description": "## Expand example #5\n\nA selection of a collection of invoices issued, where each invoice contains an **ID** and a subset of the collection of invoice rows (**Rows**) limited to rows of type 3 (stock). Only the specified fields - ID, line type and amount - are returned. In addition, the lines are arranged in the same order as on the document."
							},
							"response": []
						},
						{
							"name": "selecting invoices with company objects and a limited collection of rows, sorting and expanding items in a subcollection",
							"id": "5fafe4c3-97aa-47f9-a628-f6ee5a731c52",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=id&expand=Rows(select ID, RowType, TotalPrice where RowType eq 3 orderby PosIndex), Rows.StoreCard_ID(select ID, Code, Name)",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "id"
										},
										{
											"key": "expand",
											"value": "Rows(select ID, RowType, TotalPrice where RowType eq 3 orderby PosIndex), Rows.StoreCard_ID(select ID, Code, Name)"
										}
									]
								},
								"description": "## Expand example #6\n\nA selection of a collection of invoices issued, where each invoice contains an **ID** and a subset of the collection of invoice rows (**Rows**) limited to rows of type 3 (stock). Only the specidied fields - ID, line type and amount - are returned. The lines are arranged in the same order as on the document. For stock cards on rows, we also want to get their **ID**, **code** and **name**."
							},
							"response": []
						}
					],
					"id": "fc37d28c-3509-41a7-9922-b7b1b648e628",
					"description": "The expand caluse is used to expand referenced **BO**s and **BO** collections. It is used when we want to obtain a Business object with one query, including **BO**s that are connected to it (typically fields whose name ends with \"_ID\"). It can be individual objects or their collections (typically Rows - document lines)."
				},
				{
					"name": "groupby",
					"item": [
						{
							"name": "selection of invoices with aggregation by company",
							"id": "7e38c14e-726e-481e-8913-27e430845389",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Sum(Amount),Firm_ID&groupby=Firm_ID",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Sum(Amount),Firm_ID"
										},
										{
											"key": "groupby",
											"value": "Firm_ID"
										}
									]
								},
								"description": "## Groupby example #1\n\nSelection of a collection of invoices issued, each invoice object contains an amount (**Sum(Amount)**) aggregated according to the companies to which the invoices were issued (**Firm_ID**)."
							},
							"response": []
						},
						{
							"name": "selection of invoices with aggregation by company with the entire object of the company",
							"id": "97321bbf-8215-4dea-a5c3-f18aa5700017",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Sum(Amount)&groupby=Firm_ID&expand=Firm_ID",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Sum(Amount)"
										},
										{
											"key": "groupby",
											"value": "Firm_ID"
										},
										{
											"key": "expand",
											"value": "Firm_ID"
										}
									]
								},
								"description": "## Groupby example #2\n\nSelection of a collection of invoices issued, each invoice object contains and amount (**Sum(Amount)**) aggregated according to the companies to which the invoices were issued - **Firm_ID** contains the complete company object."
							},
							"response": []
						}
					],
					"id": "c39827ea-b440-49fb-bdb5-eb46c592814a",
					"description": "<p>Clause groupby is used to aggregate data in the same way as in SQL.</p>"
				},
				{
					"name": "orderby",
					"item": [
						{
							"name": "selection of invoices sorted by amount",
							"id": "e971115e-3dec-4bf3-96fa-b7d390edd3dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount&expand=Firm_ID(ID,Code,Name)&orderby=Amount",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount"
										},
										{
											"key": "expand",
											"value": "Firm_ID(ID,Code,Name)"
										},
										{
											"key": "orderby",
											"value": "Amount"
										}
									]
								},
								"description": "## Orderby example #1\n\nSelection of a collection of invoices issued, each invoice object contains an **Amount** and an object of the company to which the invoice is issued **Firm_ID**. Data is sorted by amount (default is ascending)."
							},
							"response": []
						},
						{
							"name": "selection of invoices sorted by company code",
							"id": "3b6cf6ff-fe53-474f-8d2b-ddca4e553667",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount&expand=Firm_ID(ID,Code,Name)&orderby=Firm_ID.Code,Amount",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount"
										},
										{
											"key": "expand",
											"value": "Firm_ID(ID,Code,Name)"
										},
										{
											"key": "orderby",
											"value": "Firm_ID.Code,Amount"
										}
									]
								},
								"description": "## Orderby example #2\n\nSelection of a collection of invoices issued, each invoice object contains an **Amount** and an object of the company to which the invoice is issued **Firm_ID**. Invoices are sorted according to the code of the company to which they are issued, and then according to the amount. It is also possible to sort by fields of referenced objects, as well as multiple fields in general."
							},
							"response": []
						},
						{
							"name": "selection of invoices with combined sorting",
							"id": "a1ddf71a-2de4-496b-9f66-be44aa9f26fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/issuedinvoices?select=Amount&expand=Firm_ID(ID,Code,Name)&orderby=Firm_ID.Code,Amount+desc",
									"host": [
										"{{url}}"
									],
									"path": [
										"issuedinvoices"
									],
									"query": [
										{
											"key": "select",
											"value": "Amount"
										},
										{
											"key": "expand",
											"value": "Firm_ID(ID,Code,Name)"
										},
										{
											"key": "orderby",
											"value": "Firm_ID.Code,Amount+desc"
										}
									]
								},
								"description": "## Orderby example #3\n\nSelection of a collection of invoices issued, each invoice object contains **Amount** and an object of the company to which the invoice is issued **Firm_ID**. Invoices are sorted according to the code of the company to which they are issued in ascending order, and then according to the amount in descending order."
							},
							"response": []
						}
					],
					"id": "10ada63e-65b2-4f1d-bc77-be613eb0d5aa",
					"description": "<p>The orderby clause is used to sort output in the same way as in SQL.</p>"
				},
				{
					"name": "skip & take",
					"item": [
						{
							"name": "selection of centers with pagination after ten records",
							"id": "5d0efe6d-51d8-40ce-9cc7-0d797a90ce55",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/divisions?select=code,name&orderby=code&skip=0&take=10",
									"host": [
										"{{url}}"
									],
									"path": [
										"divisions"
									],
									"query": [
										{
											"key": "select",
											"value": "code,name"
										},
										{
											"key": "orderby",
											"value": "code"
										},
										{
											"key": "skip",
											"value": "0"
										},
										{
											"key": "take",
											"value": "10"
										}
									]
								},
								"description": "## Skip & take example #1\n\nSelection of a restricted center collection for listing pagination purposes. The request returns the first ten centers (sorted by **code**)."
							},
							"response": []
						}
					],
					"id": "10b0ba01-b2da-4604-9fc0-39dd1024b32c",
					"description": "The skip and take clauses are used to limit the number of selected records. A typical use is pagination of the results list. The skip clause specifies how many records to skip, the take clause the number of records to return."
				}
			],
			"id": "fd1d63e5-f6f2-4754-8755-37e4117b5526"
		},
		{
			"name": "Extended Queries",
			"item": [
				{
					"name": "Select, expand",
					"item": [
						{
							"name": "Select an invoice collection with a field that is composed using fields retrieved from linked objects",
							"id": "aeaebf6f-9acb-44af-a758-c45c835648b9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"class\": \"issuedinvoices\",\r\n  \"select\": [\r\n\t\"ID\",\r\n\t\"Amount\",\r\n\t{ \"name\": \"DocNumber\", \"value\": \"DocQueue_ID.Code || '-' || OrdNumber || '/' || Period_ID.Code\" }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/query",
								"description": "<p>Selection of \"ID\", \"Credit\" and \"DocName\" which consists of combination two other attributes.</p>"
							},
							"response": []
						},
						{
							"name": "Select a collection of companies with a field using an expression object",
							"id": "25fe429e-b4be-45a4-93ab-a234b71d3e8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{user}}",
										"password": "{{password}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"class\": \"firms\",\r\n  \"select\": [\r\n\t\"ID\",\r\n\t\"Code\",\r\n\t\"Name\",\r\n\t{ \"name\": \"FirmOffices\",\r\n\t  \"value\": [\"Name\"]\r\n\t},\r\n\t{ \"name\": \"BankAccounts\",\r\n\t  \"value\": {\r\n\t  \"field\": \"Rows\",\r\n\t  \"query\": {\r\n\t\t\"select\": [\"ID\", \"Name\", \"BankAccount\"]\r\n\t  }\r\n\t}\r\n  }\r\n ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/query",
								"description": "<p>Selecton of attributes. Expression object is used for the selection of the \"FirmOffices\" field. Specification object is used for the selection of \"BankAccounts\" (the BankAccounts field, bank accounts are maintained on the company's BO) as Rows</p>"
							},
							"response": []
						},
						{
							"name": "Select a collection of price lists using an expression object within the select",
							"id": "20281266-25b7-4820-8c84-0d0779eb04e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"password": "{{password}}",
										"username": "{{user}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"class\": \"pricelists\",\r\n  \"select\": [\r\n\t\"ID\", \r\n\t\"Code\", \r\n\t\"Name\",\r\n\t{\r\n\t  \"name\": \"Firms\",\r\n\t  \"value\":\r\n\t  {\r\n\t\t\"class\": \"firms\",\r\n\t\t\"select\": [\"ID\", \"Code\", \"Name\"],\r\n\t\t\"where\": \"PriceList_ID = :ID\"\r\n\t }\r\n     }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/query",
								"description": "<p>Selection of attributes. \"Pricelists\" has selection of some attributes from class \"pricelists\" and \"where\" condition.</p>"
							},
							"response": []
						}
					],
					"id": "8136509b-a58b-4db2-aa29-1249c46b28e0",
					"description": "<p>In advanced queries \"select\" is used as both \"select\" and \"expand\".</p>"
				},
				{
					"name": "Where",
					"item": [],
					"id": "c51ddcee-6ec2-46a4-8ff6-4b06a4250777",
					"description": "<p>There isn't any major difference in usage of \"where\" except it's written as property in JSON body. -(see example)</p>"
				},
				{
					"name": "Order by",
					"item": [
						{
							"name": "Selection of a collection of issued invoices sorted by code and then by quantity",
							"id": "1ef93ddc-a8fe-4099-88fc-53a3b0546ad9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{supervisor}}",
										"password": ""
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"class\": \"issuedinvoices\",\r\n  \"select\": [\r\n\t\"Amount\", \r\n\t{\r\n\t  \"name\": \"Firm_ID\",\r\n\t  \"value\":\r\n\t  {\r\n\t\t\"select\": [\"ID\", \"Code\", \"Name\"]\r\n\t  }\r\n   }\r\n],\r\n\t\"orderby\": [\r\n\t  \"Firm_ID.Code\",\r\n\t  { \"value\": \"Amount\", \"desc\": true }\r\n]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/query",
								"description": "</p>Selection which is ordered by \"Code\" from \"Firm_ID\" object.</p>"
							},
							"response": []
						}
					],
					"id": "a7aad7ef-c892-485f-99ca-e204460f1e48",
					"description": "<p>\"order by\" is used to sort the output in the same way as in SQL. Sorting is specified in the \"orderby\" property of the query object.</p>"
				},
				{
					"name": "Group by",
					"item": [
						{
							"name": "Selection of 3 companies with highest amount",
							"id": "32a96e61-7f94-483f-b01b-73f15e3e8187",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "{{supervisor}}",
										"password": ""
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"select\": [\r\n\t\t{ \"name\": \"Amount\", \"value\": \"Sum(Amount)\" },\r\n\t\t{\r\n\t\t\t\"name\": \"Firm_ID\",\r\n\t\t\t\"value\":\r\n\t\t\t\t{\r\n\t\t\t\t\t\"select\": [\"ID\", \"Code\", \"Name\"]\r\n\t\t\t\t}\r\n\t\t}\r\n\t],\r\n\t\"orderby\": [\r\n\t\t{ \"value\": \"Sum(Amount)\", \"desc\": true }\r\n\t],\r\n\t\"groupby\": [\r\n\t\t\"Firm_ID\"\r\n\t],\r\n\t\"take\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/issuedinvoices/query",
								"description": "<p>Selection with restriction of 3 items max and sorted by \"Amount\" attribute.</p>"
							},
							"response": []
						}
					],
					"id": "fadd5ba1-95d6-4e3e-bb75-d1e9f7b9f0e4",
					"description": "<p>There isn't any major difference in usage of \"groupby\" except it's written as property in JSON body. -(see example)</p>"
				}
			],
			"id": "c51dad2d-b875-4f21-bcf8-71cb5d5b4a37",
			"description": "<p>Extended questioning differs from the basic one in the form of input data (query) and in the way are transmitted. The query is sent in the form of JSON document (so-called query object) in the body of the HTTP POST request. There are two types of resources on which extended querying can be used:</p>\n\n*   <p>The first variant is to send an HTTP request to the subresource of the BO collection /{connection}/{BO collection}/query, then it is not necessary to specify the class property (it is known thanks to the superior BO collection).</p>\n*   <p>The second option is to send an HTTP request to a general resource for extended query /{connection}/query, then it is necessary to specify the class property (it is not known due to the general nature of the resource).</p>\n\n<h2>query object</h2><table><tbody><tr><th>Property</th><th>JSON type</th><th>Meaning</th></tr><tr><td>class</td><td>string</td><td>The identifier of the collection on which the query is being executed</td></tr><tr><td>select</td><td>array</td><td>Custom query, see <a href=\"#2185b328-bbb0-4d22-9a34-1264581a767f\">select clause</a> for more</td></tr><tr><td>where</td><td>string</td><td>Collection restrictions, see <a href=\"#baf30dfb-baf2-45ac-9c3e-6b2a7a78b9f1\">where clause</a> for more</td></tr><tr><td>groupby</td><td>string</td><td>Collection aggregation, see <a href=\"#8b7bd312-1256-4d48-8676-f3b90c8d7886\">groupby clause</a> for more</td></tr><tr><td>orderby</td><td>array</td><td>Collection ordering, see <a href=\"#97553815-00e5-42ea-b5e0-8be60c592956\">orderby clause</a> for more</td></tr></tbody></table><h2>expression object</h2><table><tbody><tr><th>Property</th><th>JSON type</th><th>Meaning</th></tr><tr><td>name</td><td>string</td><td>field name in the object</td></tr><tr><td>value</td><td>string/array/object</td><td><br>string - expression that is evaluated in the resulting value<br><br>array - array containing strings with expressions that are evaluated in the resulting values<br><br>object - An object can have three different types:<br><br>1. query object - when using a query object, it is a nested query, an option available only in the extended variant of querying<br><br>2. array - if a field BO referring to another BO or a collection of BOs is specified in the name property of the parent expression object, it contains the fields of the referenced BO to be included in the query result<br><br>3. specification object - if the name property of the parent expression object does not correspond to the name of the BO field referring to another BO or collection of BOs (which we want to place under the selected name) as in the previous case, it allows specifying the BO field from which the resulting value will be drawn, including specific fields of the referenced BO (see table Specification object)</td></tr></tbody></table>"
		},
		{
			"name": "resources for MS excel functions",
			"item": [
				{
					"name": "turnover",
					"id": "8cd18a5b-27ca-4230-a024-144d5aa2c5d2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bookentries/turnover?date-from=2005-01-01&date-to=2010-12-31&accounts=22110&include-requests=true&divisions=000,100&divisions-with-children=true&firms=00002",
							"host": [
								"{{url}}"
							],
							"path": [
								"bookentries",
								"turnover"
							],
							"query": [
								{
									"key": "date-from",
									"value": "2005-01-01"
								},
								{
									"key": "date-to",
									"value": "2010-12-31"
								},
								{
									"key": "accounts",
									"value": "22110"
								},
								{
									"key": "include-requests",
									"value": "true"
								},
								{
									"key": "divisions",
									"value": "000,100"
								},
								{
									"key": "divisions-with-children",
									"value": "true"
								},
								{
									"key": "firms",
									"value": "00002"
								}
							]
						},
						"description": "## Excel example #1\n\nSources are used to obtain information about turnover on accounts. They draw data from the Accounting journal agenda, or also from the Accounting requests agenda."
					},
					"response": []
				},
				{
					"name": "balance",
					"id": "fc4e4751-30f1-4532-a518-e955869de929",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/balance?date-to=2018-12-31&accounts=02100",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"balance"
							],
							"query": [
								{
									"key": "date-to",
									"value": "2018-12-31"
								},
								{
									"key": "accounts",
									"value": "02100"
								}
							]
						},
						"description": "## Excel example #2\n\nThe resource is used to obtain information about account balances on a certain date. It draws data from the Accounting journal agenda, or also from the Accounting requests agenda."
					},
					"response": []
				},
				{
					"name": "stock",
					"id": "5d6e2b0b-1f39-420a-8ff2-4b4687d7d5d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/stock?date-to=2018-12-31&stores=01,02&store-menu-items=HW&store-card-categories=M&information-type=q",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"stock"
							],
							"query": [
								{
									"key": "date-to",
									"value": "2018-12-31"
								},
								{
									"key": "stores",
									"value": "01,02"
								},
								{
									"key": "store-menu-items",
									"value": "HW"
								},
								{
									"key": "store-card-categories",
									"value": "M"
								},
								{
									"key": "information-type",
									"value": "q"
								}
							]
						},
						"description": "## Excel example #3\n\nThe resource is used to obtain information about the state of the warehouse (quantity, price) on a certain date according to the selected criteria."
					},
					"response": []
				},
				{
					"name": "moves",
					"id": "579e0e12-4817-4842-b572-b8b11d551eb8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/moves?date-from=2019-01-01&date-to=2019-12-31&stores=01,02&store-cards=01,02,03&divisions=000&information-type=a",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"moves"
							],
							"query": [
								{
									"key": "date-from",
									"value": "2019-01-01"
								},
								{
									"key": "date-to",
									"value": "2019-12-31"
								},
								{
									"key": "stores",
									"value": "01,02"
								},
								{
									"key": "store-cards",
									"value": "01,02,03"
								},
								{
									"key": "divisions",
									"value": "000"
								},
								{
									"key": "information-type",
									"value": "a"
								}
							]
						},
						"description": "## Excel example #4\nThe resource is used to obtain information about stock movements (quantity, price) for a certain period according to selected criteria."
					},
					"response": []
				},
				{
					"name": "sale",
					"id": "155e7577-3af1-495e-b68d-4a4398177b13",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/sale?date-from=2005-01-01&date-to=2010-12-31&stores=01,02&store-cards=01,02,03&divisions=000&information-type=a",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"sale"
							],
							"query": [
								{
									"key": "date-from",
									"value": "2005-01-01"
								},
								{
									"key": "date-to",
									"value": "2010-12-31"
								},
								{
									"key": "stores",
									"value": "01,02"
								},
								{
									"key": "store-cards",
									"value": "01,02,03"
								},
								{
									"key": "divisions",
									"value": "000"
								},
								{
									"key": "information-type",
									"value": "a"
								}
							]
						},
						"description": "## Excel example #5\nThe resource is used to obtain information on sales of stock items (quantity, sales price without VAT) for a certain period according to selected criteria."
					},
					"response": []
				},
				{
					"name": "receivable",
					"id": "8afa43dd-fbe2-4b98-aba1-e946a19be0f0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/receivable?doc-date-from=2018-01-01&doc-date-to=2018-12-31&firms=00011&information-type=np",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"receivable"
							],
							"query": [
								{
									"key": "doc-date-from",
									"value": "2018-01-01"
								},
								{
									"key": "doc-date-to",
									"value": "2018-12-31"
								},
								{
									"key": "firms",
									"value": "00011"
								},
								{
									"key": "information-type",
									"value": "np"
								}
							]
						},
						"description": "## Excel example #6\nThe resource is used to obtain information about receivables - it returns the amount of the selected type calculated according to the selected criteria. It is used similarly as a resource for liabilities."
					},
					"response": []
				},
				{
					"name": "payable",
					"id": "06d76b3a-c76b-40c2-846e-838b4ace02ac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/payable?doc-date-from=2018-01-01&doc-date-to=2018-12-31&firms=00006&information-type=t",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"payable"
							],
							"query": [
								{
									"key": "doc-date-from",
									"value": "2018-01-01"
								},
								{
									"key": "doc-date-to",
									"value": "2018-12-31"
								},
								{
									"key": "firms",
									"value": "00006"
								},
								{
									"key": "information-type",
									"value": "t"
								}
							]
						},
						"description": "## Excel example #7\nThe resource is used to obtain information about liabilities - it returns the amount of the selected type calculated according to the selected criteria. It is used similarly as a source for receivables."
					},
					"response": []
				},
				{
					"name": "depreciation",
					"id": "8441ea95-e61d-4b51-8a3b-45aaaa8b7311",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/depreciation?date-from=2018-01-01&date-to=2018-12-31&divisions=01,02&information-type=t",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"depreciation"
							],
							"query": [
								{
									"key": "date-from",
									"value": "2018-01-01"
								},
								{
									"key": "date-to",
									"value": "2018-12-31"
								},
								{
									"key": "divisions",
									"value": "01,02"
								},
								{
									"key": "information-type",
									"value": "t"
								}
							]
						},
						"description": "## Excel example #8\nThe resource is used to obtain information about depreciation - it returns the total amount of accounting or tax depreciation calculated according to the selected criteria."
					},
					"response": []
				},
				{
					"name": "asset",
					"id": "9290f366-fd88-4f06-90cc-03ce8761acd3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/asset?date-to=2018-12-31&responsibles=4000000101&information-type=tr",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"asset"
							],
							"query": [
								{
									"key": "date-to",
									"value": "2018-12-31"
								},
								{
									"key": "responsibles",
									"value": "4000000101"
								},
								{
									"key": "information-type",
									"value": "tr"
								}
							]
						},
						"description": "## Excel example #9\nThe resource is used to obtain information about the state of the property - it returns the initial or residual price calculated according to the selected criteria."
					},
					"response": []
				},
				{
					"name": "payroll",
					"id": "c626a414-e73d-4530-a0a4-56516dae785d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{user}}",
								"password": "{{password}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/utils/payroll?wage-periods=2018/12&employ-patterns=HPP&information-type=t",
							"host": [
								"{{url}}"
							],
							"path": [
								"utils",
								"payroll"
							],
							"query": [
								{
									"key": "wage-periods",
									"value": "2018/12"
								},
								{
									"key": "employ-patterns",
									"value": "HPP"
								},
								{
									"key": "information-type",
									"value": "t"
								}
							]
						},
						"description": "## Excel example #10\nThe resource is used to obtain information from the field of salaries and HR - it returns information of various types calculated according to the selected criteria."
					},
					"response": []
				}
			],
			"id": "bd96ad24-b1c5-472a-b61e-ea899b19827a"
		}
	]
}